/*
** Copyright (c) 2014-2018 The Khronos Group Inc.
** 
** Permission is hereby granted, free of charge, to any person obtaining a copy
** of this software and/or associated documentation files (the "Materials"),
** to deal in the Materials without restriction, including without limitation
** the rights to use, copy, modify, merge, publish, distribute, sublicense,
** and/or sell copies of the Materials, and to permit persons to whom the
** Materials are furnished to do so, subject to the following conditions:
** 
** The above copyright notice and this permission notice shall be included in
** all copies or substantial portions of the Materials.
** 
** MODIFICATIONS TO THIS FILE MAY MEAN IT NO LONGER ACCURATELY REFLECTS KHRONOS
** STANDARDS. THE UNMODIFIED, NORMATIVE VERSIONS OF KHRONOS SPECIFICATIONS AND
** HEADER INFORMATION ARE LOCATED AT https://www.khronos.org/registry/ 
** 
** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
** OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
** THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
** LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
** FROM,OUT OF OR IN CONNECTION WITH THE MATERIALS OR THE USE OR OTHER DEALINGS
** IN THE MATERIALS.
*/

/*
** This header is automatically generated by the same tool that creates
** the Binary Section of the SPIR-V specification.
*/

/*
** Enumeration tokens for SPIR-V, in various styles:
**   C, C++, C++11, JSON, Lua, Python
** 
** - C will have tokens with a "Spv" prefix, e.g.: SpvSourceLanguageGLSL
** - C++ will have tokens in the "spv" name space, e.g.: spv::SourceLanguageGLSL
** - C++11 will use enum classes in the spv namespace, e.g.: spv::SourceLanguage::GLSL
** - Lua will use tables, e.g.: spv.SourceLanguage.GLSL
** - Python will use dictionaries, e.g.: spv['SourceLanguage']['GLSL']
** 
** Some tokens act like mask values, which can be OR'd together,
** while others are mutually exclusive.  The mask-like ones have
** "Mask" in their name, and a parallel enum that has the shift
** amount (1 << x) for each corresponding enumerant.
*/

#ifndef spirv_H
#define spirv_H

typedef unsigned int SpvId;

#define SPV_VERSION 0x10200
#define SPV_REVISION 2

static const unsigned int SpvMagicNumber = 0x07230203;
static const unsigned int SpvVersion = 0x00010200;
static const unsigned int SpvRevision = 2;
static const unsigned int SpvOpCodeMask = 0xffff;
static const unsigned int SpvWordCountShift = 16;

typedef enum Spv_Source_Language {
    SPV_SOURCE_LANGUAGE_UNKNOWN = 0,
    SPV_SOURCE_LANGUAGE_ESSL = 1,
    SPV_SOURCE_LANGUAGE_GLSL = 2,
    SPV_SOURCE_LANGUAGE_OPEN_CL_C = 3,
    SPV_SOURCE_LANGUAGE_OPEN_CL_CPP = 4,
    SPV_SOURCE_LANGUAGE_HLSL = 5,
    SPV_SOURCE_LANGUAGE_MAX = 0x7fffffff
} Spv_Source_Language;

typedef enum Spv_Execution_Model {
    SPV_EXECUTION_MODEL_VERTEX = 0,
    SPV_EXECUTION_MODEL_TESSELLATION_CONTROL = 1,
    SPV_EXECUTION_MODEL_TESSELLATION_EVALUATION = 2,
    SPV_EXECUTION_MODEL_GEOMETRY = 3,
    SPV_EXECUTION_MODEL_FRAGMENT = 4,
    SPV_EXECUTION_MODEL_GLCOMPUTE = 5,
    SPV_EXECUTION_MODEL_KERNEL = 6,
    SPV_EXECUTION_MODEL_MAX = 0x7fffffff
} Spv_Execution_Model;

typedef enum Spv_Addressing_Model {
    SPV_ADDRESSING_MODEL_LOGICAL = 0,
    SPV_ADDRESSING_MODEL_PHYSICAL32 = 1,
    SPV_ADDRESSING_MODEL_PHYSICAL64 = 2,
    SPV_ADDRESSING_MODEL_MAX = 0x7fffffff
} Spv_Addressing_Model;

typedef enum Spv_Memory_Model {
    SPV_MEMORY_MODEL_SIMPLE = 0,
    SPV_MEMORY_MODEL_GLSL450 = 1,
    SPV_MEMORY_MODEL_OPEN_CL = 2,
    SPV_MEMORY_MODEL_MAX = 0x7fffffff
} Spv_Memory_Model;

typedef enum Spv_Execution_Mode {
    SPV_EXECUTION_MODE_INVOCATIONS = 0,
    SPV_EXECUTION_MODE_SPACING_EQUAL = 1,
    SPV_EXECUTION_MODE_SPACING_FRACTIONAL_EVEN = 2,
    SPV_EXECUTION_MODE_SPACING_FRACTIONAL_ODD = 3,
    SPV_EXECUTION_MODE_VERTEX_ORDER_CW = 4,
    SPV_EXECUTION_MODE_VERTEX_ORDER_CCW = 5,
    SPV_EXECUTION_MODE_PIXEL_CENTER_INTEGER = 6,
    SPV_EXECUTION_MODE_ORIGIN_UPPER_LEFT = 7,
    SPV_EXECUTION_MODE_ORIGIN_LOWER_LEFT = 8,
    SPV_EXECUTION_MODE_EARLY_FRAGMENT_TESTS = 9,
    SPV_EXECUTION_MODE_POINT_MODE = 10,
    SPV_EXECUTION_MODE_XFB = 11,
    SPV_EXECUTION_MODE_DEPTH_REPLACING = 12,
    SPV_EXECUTION_MODE_DEPTH_GREATER = 14,
    SPV_EXECUTION_MODE_DEPTH_LESS = 15,
    SPV_EXECUTION_MODE_DEPTH_UNCHANGED = 16,
    SPV_EXECUTION_MODE_LOCAL_SIZE = 17,
    SPV_EXECUTION_MODE_LOCAL_SIZE_HINT = 18,
    SPV_EXECUTION_MODE_INPUT_POINTS = 19,
    SPV_EXECUTION_MODE_INPUT_LINES = 20,
    SPV_EXECUTION_MODE_INPUT_LINES_ADJACENCY = 21,
    SPV_EXECUTION_MODE_TRIANGLES = 22,
    SPV_EXECUTION_MODE_INPUT_TRIANGLES_ADJACENCY = 23,
    SPV_EXECUTION_MODE_QUADS = 24,
    SPV_EXECUTION_MODE_ISOLINES = 25,
    SPV_EXECUTION_MODE_OUTPUT_VERTICES = 26,
    SPV_EXECUTION_MODE_OUTPUT_POINTS = 27,
    SPV_EXECUTION_MODE_OUTPUT_LINE_STRIP = 28,
    SPV_EXECUTION_MODE_OUTPUT_TRIANGLE_STRIP = 29,
    SPV_EXECUTION_MODE_VEC_TYPE_HINT = 30,
    SPV_EXECUTION_MODE_CONTRACTION_OFF = 31,
    SPV_EXECUTION_MODE_INITIALIZER = 33,
    SPV_EXECUTION_MODE_FINALIZER = 34,
    SPV_EXECUTION_MODE_SUBGROUP_SIZE = 35,
    SPV_EXECUTION_MODE_SUBGROUPS_PER_WORKGROUP = 36,
    SPV_EXECUTION_MODE_SUBGROUPS_PER_WORKGROUP_ID = 37,
    SPV_EXECUTION_MODE_LOCAL_SIZE_ID = 38,
    SPV_EXECUTION_MODE_LOCAL_SIZE_HINT_ID = 39,
    SPV_EXECUTION_MODE_POST_DEPTH_COVERAGE = 4446,
    SPV_EXECUTION_MODE_STENCIL_REF_REPLACING_EXT = 5027,
    SPV_EXECUTION_MODE_MAX = 0x7fffffff
} Spv_Execution_Mode;

typedef enum Spv_Storage_Class {
    SPV_STORAGE_CLASS_UNIFORM_CONSTANT = 0,
    SPV_STORAGE_CLASS_INPUT = 1,
    SPV_STORAGE_CLASS_UNIFORM = 2,
    SPV_STORAGE_CLASS_OUTPUT = 3,
    SPV_STORAGE_CLASS_WORKGROUP = 4,
    SPV_STORAGE_CLASS_CROSS_WORKGROUP = 5,
    SPV_STORAGE_CLASS_PRIVATE = 6,
    SPV_STORAGE_CLASS_FUNCTION = 7,
    SPV_STORAGE_CLASS_GENERIC = 8,
    SPV_STORAGE_CLASS_PUSH_CONSTANT = 9,
    SPV_STORAGE_CLASS_ATOMIC_COUNTER = 10,
    SPV_STORAGE_CLASS_IMAGE = 11,
    SPV_STORAGE_CLASS_STORAGE_BUFFER = 12,
    SPV_STORAGE_CLASS_MAX = 0x7fffffff
} Spv_Storage_Class;

typedef enum Spv_Dim {
    SPV_DIM1D = 0,
    SPV_DIM2D = 1,
    SPV_DIM3D = 2,
    SPV_DIM_CUBE = 3,
    SPV_DIM_RECT = 4,
    SPV_DIM_BUFFER = 5,
    SPV_DIM_SUBPASS_DATA = 6,
    SPV_DIM_MAX = 0x7fffffff
} Spv_Dim;

typedef enum Spv_Sampler_Addressing_Mode {
    SPV_SAMPLER_ADDRESSING_MODE_NONE = 0,
    SPV_SAMPLER_ADDRESSING_MODE_CLAMP_TO_EDGE = 1,
    SPV_SAMPLER_ADDRESSING_MODE_CLAMP = 2,
    SPV_SAMPLER_ADDRESSING_MODE_REPEAT = 3,
    SPV_SAMPLER_ADDRESSING_MODE_REPEAT_MIRRORED = 4,
    SPV_SAMPLER_ADDRESSING_MODE_MAX = 0x7fffffff
} Spv_Sampler_Addressing_Mode;

typedef enum Spv_Sampler_Filter_Mode {
    SPV_SAMPLER_FILTER_MODE_NEAREST = 0,
    SPV_SAMPLER_FILTER_MODE_LINEAR = 1,
    SPV_SAMPLER_FILTER_MODE_MAX = 0x7fffffff
} Spv_Sampler_Filter_Mode;

typedef enum Spv_Image_Format {
    SPV_IMAGE_FORMAT_UNKNOWN = 0,
    SPV_IMAGE_FORMAT_RGBA32F = 1,
    SPV_IMAGE_FORMAT_RGBA16F = 2,
    SPV_IMAGE_FORMAT_R32F = 3,
    SPV_IMAGE_FORMAT_RGBA8 = 4,
    SPV_IMAGE_FORMAT_RGBA8SNORM = 5,
    SPV_IMAGE_FORMAT_RG32F = 6,
    SPV_IMAGE_FORMAT_RG16F = 7,
    SPV_IMAGE_FORMAT_R11F_G11F_B10F = 8,
    SPV_IMAGE_FORMAT_R16F = 9,
    SPV_IMAGE_FORMAT_RGBA16 = 10,
    SPV_IMAGE_FORMAT_RGB10A2 = 11,
    SPV_IMAGE_FORMAT_RG16 = 12,
    SPV_IMAGE_FORMAT_RG8 = 13,
    SPV_IMAGE_FORMAT_R16 = 14,
    SPV_IMAGE_FORMAT_R8 = 15,
    SPV_IMAGE_FORMAT_RGBA16SNORM = 16,
    SPV_IMAGE_FORMAT_RG16SNORM = 17,
    SPV_IMAGE_FORMAT_RG8SNORM = 18,
    SPV_IMAGE_FORMAT_R16SNORM = 19,
    SPV_IMAGE_FORMAT_R8SNORM = 20,
    SPV_IMAGE_FORMAT_RGBA32I = 21,
    SPV_IMAGE_FORMAT_RGBA16I = 22,
    SPV_IMAGE_FORMAT_RGBA8I = 23,
    SPV_IMAGE_FORMAT_R32I = 24,
    SPV_IMAGE_FORMAT_RG32I = 25,
    SPV_IMAGE_FORMAT_RG16I = 26,
    SPV_IMAGE_FORMAT_RG8I = 27,
    SPV_IMAGE_FORMAT_R16I = 28,
    SPV_IMAGE_FORMAT_R8I = 29,
    SPV_IMAGE_FORMAT_RGBA32UI = 30,
    SPV_IMAGE_FORMAT_RGBA16UI = 31,
    SPV_IMAGE_FORMAT_RGBA8UI = 32,
    SPV_IMAGE_FORMAT_R32UI = 33,
    SPV_IMAGE_FORMAT_RGB10A2UI = 34,
    SPV_IMAGE_FORMAT_RG32UI = 35,
    SPV_IMAGE_FORMAT_RG16UI = 36,
    SPV_IMAGE_FORMAT_RG8UI = 37,
    SPV_IMAGE_FORMAT_R16UI = 38,
    SPV_IMAGE_FORMAT_R8UI = 39,
    SPV_IMAGE_FORMAT_MAX = 0x7fffffff
} Spv_Image_Format;

typedef enum Spv_Image_Channel_Order {
    SPV_IMAGE_CHANNEL_ORDER_R = 0,
    SPV_IMAGE_CHANNEL_ORDER_A = 1,
    SPV_IMAGE_CHANNEL_ORDER_RG = 2,
    SPV_IMAGE_CHANNEL_ORDER_RA = 3,
    SPV_IMAGE_CHANNEL_ORDER_RGB = 4,
    SPV_IMAGE_CHANNEL_ORDER_RGBA = 5,
    SPV_IMAGE_CHANNEL_ORDER_BGRA = 6,
    SPV_IMAGE_CHANNEL_ORDER_ARGB = 7,
    SPV_IMAGE_CHANNEL_ORDER_INTENSITY = 8,
    SPV_IMAGE_CHANNEL_ORDER_LUMINANCE = 9,
    SPV_IMAGE_CHANNEL_ORDER_RX = 10,
    SPV_IMAGE_CHANNEL_ORDER_RGX = 11,
    SPV_IMAGE_CHANNEL_ORDER_RGBX = 12,
    SPV_IMAGE_CHANNEL_ORDER_DEPTH = 13,
    SPV_IMAGE_CHANNEL_ORDER_DEPTH_STENCIL = 14,
    SPV_IMAGE_CHANNEL_ORDERS_RGB = 15,
    SPV_IMAGE_CHANNEL_ORDERS_RGBX = 16,
    SPV_IMAGE_CHANNEL_ORDERS_RGBA = 17,
    SPV_IMAGE_CHANNEL_ORDERS_BGRA = 18,
    SPV_IMAGE_CHANNEL_ORDER_ABGR = 19,
    SPV_IMAGE_CHANNEL_ORDER_MAX = 0x7fffffff
} Spv_Image_Channel_Order;

typedef enum Spv_Image_Channel_Data_Type {
    SPV_IMAGE_CHANNEL_DATA_TYPE_SNORM_INT8 = 0,
    SPV_IMAGE_CHANNEL_DATA_TYPE_SNORM_INT16 = 1,
    SPV_IMAGE_CHANNEL_DATA_TYPE_UNORM_INT8 = 2,
    SPV_IMAGE_CHANNEL_DATA_TYPE_UNORM_INT16 = 3,
    SPV_IMAGE_CHANNEL_DATA_TYPE_UNORM_SHORT565 = 4,
    SPV_IMAGE_CHANNEL_DATA_TYPE_UNORM_SHORT555 = 5,
    SPV_IMAGE_CHANNEL_DATA_TYPE_UNORM_INT101010 = 6,
    SPV_IMAGE_CHANNEL_DATA_TYPE_SIGNED_INT8 = 7,
    SPV_IMAGE_CHANNEL_DATA_TYPE_SIGNED_INT16 = 8,
    SPV_IMAGE_CHANNEL_DATA_TYPE_SIGNED_INT32 = 9,
    SPV_IMAGE_CHANNEL_DATA_TYPE_UNSIGNED_INT8 = 10,
    SPV_IMAGE_CHANNEL_DATA_TYPE_UNSIGNED_INT16 = 11,
    SPV_IMAGE_CHANNEL_DATA_TYPE_UNSIGNED_INT32 = 12,
    SPV_IMAGE_CHANNEL_DATA_TYPE_HALF_FLOAT = 13,
    SPV_IMAGE_CHANNEL_DATA_TYPE_FLOAT = 14,
    SPV_IMAGE_CHANNEL_DATA_TYPE_UNORM_INT24 = 15,
    SPV_IMAGE_CHANNEL_DATA_TYPE_UNORM_INT101010_2 = 16,
    SPV_IMAGE_CHANNEL_DATA_TYPE_MAX = 0x7fffffff
} Spv_Image_Channel_Data_Type;

typedef enum Spv_Image_Operands_Shift {
    SPV_IMAGE_OPERANDS_BIAS_SHIFT = 0,
    SPV_IMAGE_OPERANDS_LOD_SHIFT = 1,
    SPV_IMAGE_OPERANDS_GRAD_SHIFT = 2,
    SPV_IMAGE_OPERANDS_CONST_OFFSET_SHIFT = 3,
    SPV_IMAGE_OPERANDS_OFFSET_SHIFT = 4,
    SPV_IMAGE_OPERANDS_CONST_OFFSETS_SHIFT = 5,
    SPV_IMAGE_OPERANDS_SAMPLE_SHIFT = 6,
    SPV_IMAGE_OPERANDS_MIN_LOD_SHIFT = 7,
    SPV_IMAGE_OPERANDS_MAX = 0x7fffffff
} Spv_Image_Operands_Shift;

typedef enum Spv_Image_Operands_Mask {
    SPV_IMAGE_OPERANDS_MASK_NONE = 0,
    SPV_IMAGE_OPERANDS_BIAS_MASK = 0x00000001,
    SPV_IMAGE_OPERANDS_LOD_MASK = 0x00000002,
    SPV_IMAGE_OPERANDS_GRAD_MASK = 0x00000004,
    SPV_IMAGE_OPERANDS_CONST_OFFSET_MASK = 0x00000008,
    SPV_IMAGE_OPERANDS_OFFSET_MASK = 0x00000010,
    SPV_IMAGE_OPERANDS_CONST_OFFSETS_MASK = 0x00000020,
    SPV_IMAGE_OPERANDS_SAMPLE_MASK = 0x00000040,
    SPV_IMAGE_OPERANDS_MIN_LOD_MASK = 0x00000080
} Spv_Image_Operands_Mask;

typedef enum Spv_Fpfast_Math_Mode_Shift {
    SPV_FPFAST_MATH_MODE_NOT_NA_NSHIFT = 0,
    SPV_FPFAST_MATH_MODE_NOT_INF_SHIFT = 1,
    SPV_FPFAST_MATH_MODE_NSZSHIFT = 2,
    SPV_FPFAST_MATH_MODE_ALLOW_RECIP_SHIFT = 3,
    SPV_FPFAST_MATH_MODE_FAST_SHIFT = 4,
    SPV_FPFAST_MATH_MODE_MAX = 0x7fffffff
} Spv_Fpfast_Math_Mode_Shift;

typedef enum Spv_Fpfast_Math_Mode_Mask {
    SPV_FPFAST_MATH_MODE_MASK_NONE = 0,
    SPV_FPFAST_MATH_MODE_NOT_NA_NMASK = 0x00000001,
    SPV_FPFAST_MATH_MODE_NOT_INF_MASK = 0x00000002,
    SPV_FPFAST_MATH_MODE_NSZMASK = 0x00000004,
    SPV_FPFAST_MATH_MODE_ALLOW_RECIP_MASK = 0x00000008,
    SPV_FPFAST_MATH_MODE_FAST_MASK = 0x00000010
} Spv_Fpfast_Math_Mode_Mask;

typedef enum Spv_Fprounding_Mode {
    SPV_FPROUNDING_MODE_RTE = 0,
    SPV_FPROUNDING_MODE_RTZ = 1,
    SPV_FPROUNDING_MODE_RTP = 2,
    SPV_FPROUNDING_MODE_RTN = 3,
    SPV_FPROUNDING_MODE_MAX = 0x7fffffff
} Spv_Fprounding_Mode;

typedef enum Spv_Linkage_Type {
    SPV_LINKAGE_TYPE_EXPORT = 0,
    SPV_LINKAGE_TYPE_IMPORT = 1,
    SPV_LINKAGE_TYPE_MAX = 0x7fffffff
} Spv_Linkage_Type;

typedef enum Spv_Access_Qualifier {
    SPV_ACCESS_QUALIFIER_READ_ONLY = 0,
    SPV_ACCESS_QUALIFIER_WRITE_ONLY = 1,
    SPV_ACCESS_QUALIFIER_READ_WRITE = 2,
    SPV_ACCESS_QUALIFIER_MAX = 0x7fffffff
} Spv_Access_Qualifier;

typedef enum Spv_Function_Parameter_Attribute {
    SPV_FUNCTION_PARAMETER_ATTRIBUTE_ZEXT = 0,
    SPV_FUNCTION_PARAMETER_ATTRIBUTE_SEXT = 1,
    SPV_FUNCTION_PARAMETER_ATTRIBUTE_BY_VAL = 2,
    SPV_FUNCTION_PARAMETER_ATTRIBUTE_SRET = 3,
    SPV_FUNCTION_PARAMETER_ATTRIBUTE_NO_ALIAS = 4,
    SPV_FUNCTION_PARAMETER_ATTRIBUTE_NO_CAPTURE = 5,
    SPV_FUNCTION_PARAMETER_ATTRIBUTE_NO_WRITE = 6,
    SPV_FUNCTION_PARAMETER_ATTRIBUTE_NO_READ_WRITE = 7,
    SPV_FUNCTION_PARAMETER_ATTRIBUTE_MAX = 0x7fffffff
} Spv_Function_Parameter_Attribute;

typedef enum Spv_Decoration {
    SPV_DECORATION_RELAXED_PRECISION = 0,
    SPV_DECORATION_SPEC_ID = 1,
    SPV_DECORATION_BLOCK = 2,
    SPV_DECORATION_BUFFER_BLOCK = 3,
    SPV_DECORATION_ROW_MAJOR = 4,
    SPV_DECORATION_COL_MAJOR = 5,
    SPV_DECORATION_ARRAY_STRIDE = 6,
    SPV_DECORATION_MATRIX_STRIDE = 7,
    SPV_DECORATION_GLSLSHARED = 8,
    SPV_DECORATION_GLSLPACKED = 9,
    SPV_DECORATION_CPACKED = 10,
    SPV_DECORATION_BUILT_IN = 11,
    SPV_DECORATION_NO_PERSPECTIVE = 13,
    SPV_DECORATION_FLAT = 14,
    SPV_DECORATION_PATCH = 15,
    SPV_DECORATION_CENTROID = 16,
    SPV_DECORATION_SAMPLE = 17,
    SPV_DECORATION_INVARIANT = 18,
    SPV_DECORATION_RESTRICT = 19,
    SPV_DECORATION_ALIASED = 20,
    SPV_DECORATION_VOLATILE = 21,
    SPV_DECORATION_CONSTANT = 22,
    SPV_DECORATION_COHERENT = 23,
    SPV_DECORATION_NON_WRITABLE = 24,
    SPV_DECORATION_NON_READABLE = 25,
    SPV_DECORATION_UNIFORM = 26,
    SPV_DECORATION_SATURATED_CONVERSION = 28,
    SPV_DECORATION_STREAM = 29,
    SPV_DECORATION_LOCATION = 30,
    SPV_DECORATION_COMPONENT = 31,
    SPV_DECORATION_INDEX = 32,
    SPV_DECORATION_BINDING = 33,
    SPV_DECORATION_DESCRIPTOR_SET = 34,
    SPV_DECORATION_OFFSET = 35,
    SPV_DECORATION_XFB_BUFFER = 36,
    SPV_DECORATION_XFB_STRIDE = 37,
    SPV_DECORATION_FUNC_PARAM_ATTR = 38,
    SPV_DECORATION_FPROUNDING_MODE = 39,
    SPV_DECORATION_FPFAST_MATH_MODE = 40,
    SPV_DECORATION_LINKAGE_ATTRIBUTES = 41,
    SPV_DECORATION_NO_CONTRACTION = 42,
    SPV_DECORATION_INPUT_ATTACHMENT_INDEX = 43,
    SPV_DECORATION_ALIGNMENT = 44,
    SPV_DECORATION_MAX_BYTE_OFFSET = 45,
    SPV_DECORATION_ALIGNMENT_ID = 46,
    SPV_DECORATION_MAX_BYTE_OFFSET_ID = 47,
    SPV_DECORATION_EXPLICIT_INTERP_AMD = 4999,
    SPV_DECORATION_OVERRIDE_COVERAGE_NV = 5248,
    SPV_DECORATION_PASSTHROUGH_NV = 5250,
    SPV_DECORATION_VIEWPORT_RELATIVE_NV = 5252,
    SPV_DECORATION_SECONDARY_VIEWPORT_RELATIVE_NV = 5256,
    SPV_DECORATION_HLSL_COUNTER_BUFFER_GOOGLE = 5634,
    SPV_DECORATION_HLSL_SEMANTIC_GOOGLE = 5635,
    SPV_DECORATION_MAX = 0x7fffffff
} Spv_Decoration;

typedef enum Spv_Built_In {
    SPV_BUILT_IN_POSITION = 0,
    SPV_BUILT_IN_POINT_SIZE = 1,
    SPV_BUILT_IN_CLIP_DISTANCE = 3,
    SPV_BUILT_IN_CULL_DISTANCE = 4,
    SPV_BUILT_IN_VERTEX_ID = 5,
    SPV_BUILT_IN_INSTANCE_ID = 6,
    SPV_BUILT_IN_PRIMITIVE_ID = 7,
    SPV_BUILT_IN_INVOCATION_ID = 8,
    SPV_BUILT_IN_LAYER = 9,
    SPV_BUILT_IN_VIEWPORT_INDEX = 10,
    SPV_BUILT_IN_TESS_LEVEL_OUTER = 11,
    SPV_BUILT_IN_TESS_LEVEL_INNER = 12,
    SPV_BUILT_IN_TESS_COORD = 13,
    SPV_BUILT_IN_PATCH_VERTICES = 14,
    SPV_BUILT_IN_FRAG_COORD = 15,
    SPV_BUILT_IN_POINT_COORD = 16,
    SPV_BUILT_IN_FRONT_FACING = 17,
    SPV_BUILT_IN_SAMPLE_ID = 18,
    SPV_BUILT_IN_SAMPLE_POSITION = 19,
    SPV_BUILT_IN_SAMPLE_MASK = 20,
    SPV_BUILT_IN_FRAG_DEPTH = 22,
    SPV_BUILT_IN_HELPER_INVOCATION = 23,
    SPV_BUILT_IN_NUM_WORKGROUPS = 24,
    SPV_BUILT_IN_WORKGROUP_SIZE = 25,
    SPV_BUILT_IN_WORKGROUP_ID = 26,
    SPV_BUILT_IN_LOCAL_INVOCATION_ID = 27,
    SPV_BUILT_IN_GLOBAL_INVOCATION_ID = 28,
    SPV_BUILT_IN_LOCAL_INVOCATION_INDEX = 29,
    SPV_BUILT_IN_WORK_DIM = 30,
    SPV_BUILT_IN_GLOBAL_SIZE = 31,
    SPV_BUILT_IN_ENQUEUED_WORKGROUP_SIZE = 32,
    SPV_BUILT_IN_GLOBAL_OFFSET = 33,
    SPV_BUILT_IN_GLOBAL_LINEAR_ID = 34,
    SPV_BUILT_IN_SUBGROUP_SIZE = 36,
    SPV_BUILT_IN_SUBGROUP_MAX_SIZE = 37,
    SPV_BUILT_IN_NUM_SUBGROUPS = 38,
    SPV_BUILT_IN_NUM_ENQUEUED_SUBGROUPS = 39,
    SPV_BUILT_IN_SUBGROUP_ID = 40,
    SPV_BUILT_IN_SUBGROUP_LOCAL_INVOCATION_ID = 41,
    SPV_BUILT_IN_VERTEX_INDEX = 42,
    SPV_BUILT_IN_INSTANCE_INDEX = 43,
    SPV_BUILT_IN_SUBGROUP_EQ_MASK_KHR = 4416,
    SPV_BUILT_IN_SUBGROUP_GE_MASK_KHR = 4417,
    SPV_BUILT_IN_SUBGROUP_GT_MASK_KHR = 4418,
    SPV_BUILT_IN_SUBGROUP_LE_MASK_KHR = 4419,
    SPV_BUILT_IN_SUBGROUP_LT_MASK_KHR = 4420,
    SPV_BUILT_IN_BASE_VERTEX = 4424,
    SPV_BUILT_IN_BASE_INSTANCE = 4425,
    SPV_BUILT_IN_DRAW_INDEX = 4426,
    SPV_BUILT_IN_DEVICE_INDEX = 4438,
    SPV_BUILT_IN_VIEW_INDEX = 4440,
    SPV_BUILT_IN_BARY_COORD_NO_PERSP_AMD = 4992,
    SPV_BUILT_IN_BARY_COORD_NO_PERSP_CENTROID_AMD = 4993,
    SPV_BUILT_IN_BARY_COORD_NO_PERSP_SAMPLE_AMD = 4994,
    SPV_BUILT_IN_BARY_COORD_SMOOTH_AMD = 4995,
    SPV_BUILT_IN_BARY_COORD_SMOOTH_CENTROID_AMD = 4996,
    SPV_BUILT_IN_BARY_COORD_SMOOTH_SAMPLE_AMD = 4997,
    SPV_BUILT_IN_BARY_COORD_PULL_MODEL_AMD = 4998,
    SPV_BUILT_IN_FRAG_STENCIL_REF_EXT = 5014,
    SPV_BUILT_IN_VIEWPORT_MASK_NV = 5253,
    SPV_BUILT_IN_SECONDARY_POSITION_NV = 5257,
    SPV_BUILT_IN_SECONDARY_VIEWPORT_MASK_NV = 5258,
    SPV_BUILT_IN_POSITION_PER_VIEW_NV = 5261,
    SPV_BUILT_IN_VIEWPORT_MASK_PER_VIEW_NV = 5262,
    SPV_BUILT_IN_MAX = 0x7fffffff
} Spv_Built_In;

typedef enum Spv_Selection_Control_Shift {
    SPV_SELECTION_CONTROL_FLATTEN_SHIFT = 0,
    SPV_SELECTION_CONTROL_DONT_FLATTEN_SHIFT = 1,
    SPV_SELECTION_CONTROL_MAX = 0x7fffffff
} Spv_Selection_Control_Shift;

typedef enum Spv_Selection_Control_Mask {
    SPV_SELECTION_CONTROL_MASK_NONE = 0,
    SPV_SELECTION_CONTROL_FLATTEN_MASK = 0x00000001,
    SPV_SELECTION_CONTROL_DONT_FLATTEN_MASK = 0x00000002
} Spv_Selection_Control_Mask;

typedef enum Spv_Loop_Control_Shift {
    SPV_LOOP_CONTROL_UNROLL_SHIFT = 0,
    SPV_LOOP_CONTROL_DONT_UNROLL_SHIFT = 1,
    SPV_LOOP_CONTROL_DEPENDENCY_INFINITE_SHIFT = 2,
    SPV_LOOP_CONTROL_DEPENDENCY_LENGTH_SHIFT = 3,
    SPV_LOOP_CONTROL_MAX = 0x7fffffff
} Spv_Loop_Control_Shift;

typedef enum Spv_Loop_Control_Mask {
    SPV_LOOP_CONTROL_MASK_NONE = 0,
    SPV_LOOP_CONTROL_UNROLL_MASK = 0x00000001,
    SPV_LOOP_CONTROL_DONT_UNROLL_MASK = 0x00000002,
    SPV_LOOP_CONTROL_DEPENDENCY_INFINITE_MASK = 0x00000004,
    SPV_LOOP_CONTROL_DEPENDENCY_LENGTH_MASK = 0x00000008
} Spv_Loop_Control_Mask;

typedef enum Spv_Function_Control_Shift {
    SPV_FUNCTION_CONTROL_INLINE_SHIFT = 0,
    SPV_FUNCTION_CONTROL_DONT_INLINE_SHIFT = 1,
    SPV_FUNCTION_CONTROL_PURE_SHIFT = 2,
    SPV_FUNCTION_CONTROL_CONST_SHIFT = 3,
    SPV_FUNCTION_CONTROL_MAX = 0x7fffffff
} Spv_Function_Control_Shift;

typedef enum Spv_Function_Control_Mask {
    SPV_FUNCTION_CONTROL_MASK_NONE = 0,
    SPV_FUNCTION_CONTROL_INLINE_MASK = 0x00000001,
    SPV_FUNCTION_CONTROL_DONT_INLINE_MASK = 0x00000002,
    SPV_FUNCTION_CONTROL_PURE_MASK = 0x00000004,
    SPV_FUNCTION_CONTROL_CONST_MASK = 0x00000008
} Spv_Function_Control_Mask;

typedef enum Spv_Memory_Semantics_Shift {
    SPV_MEMORY_SEMANTICS_ACQUIRE_SHIFT = 1,
    SPV_MEMORY_SEMANTICS_RELEASE_SHIFT = 2,
    SPV_MEMORY_SEMANTICS_ACQUIRE_RELEASE_SHIFT = 3,
    SPV_MEMORY_SEMANTICS_SEQUENTIALLY_CONSISTENT_SHIFT = 4,
    SPV_MEMORY_SEMANTICS_UNIFORM_MEMORY_SHIFT = 6,
    SPV_MEMORY_SEMANTICS_SUBGROUP_MEMORY_SHIFT = 7,
    SPV_MEMORY_SEMANTICS_WORKGROUP_MEMORY_SHIFT = 8,
    SPV_MEMORY_SEMANTICS_CROSS_WORKGROUP_MEMORY_SHIFT = 9,
    SPV_MEMORY_SEMANTICS_ATOMIC_COUNTER_MEMORY_SHIFT = 10,
    SPV_MEMORY_SEMANTICS_IMAGE_MEMORY_SHIFT = 11,
    SPV_MEMORY_SEMANTICS_MAX = 0x7fffffff
} Spv_Memory_Semantics_Shift;

typedef enum Spv_Memory_Semantics_Mask {
    SPV_MEMORY_SEMANTICS_MASK_NONE = 0,
    SPV_MEMORY_SEMANTICS_ACQUIRE_MASK = 0x00000002,
    SPV_MEMORY_SEMANTICS_RELEASE_MASK = 0x00000004,
    SPV_MEMORY_SEMANTICS_ACQUIRE_RELEASE_MASK = 0x00000008,
    SPV_MEMORY_SEMANTICS_SEQUENTIALLY_CONSISTENT_MASK = 0x00000010,
    SPV_MEMORY_SEMANTICS_UNIFORM_MEMORY_MASK = 0x00000040,
    SPV_MEMORY_SEMANTICS_SUBGROUP_MEMORY_MASK = 0x00000080,
    SPV_MEMORY_SEMANTICS_WORKGROUP_MEMORY_MASK = 0x00000100,
    SPV_MEMORY_SEMANTICS_CROSS_WORKGROUP_MEMORY_MASK = 0x00000200,
    SPV_MEMORY_SEMANTICS_ATOMIC_COUNTER_MEMORY_MASK = 0x00000400,
    SPV_MEMORY_SEMANTICS_IMAGE_MEMORY_MASK = 0x00000800
} Spv_Memory_Semantics_Mask;

typedef enum Spv_Memory_Access_Shift {
    SPV_MEMORY_ACCESS_VOLATILE_SHIFT = 0,
    SPV_MEMORY_ACCESS_ALIGNED_SHIFT = 1,
    SPV_MEMORY_ACCESS_NONTEMPORAL_SHIFT = 2,
    SPV_MEMORY_ACCESS_MAX = 0x7fffffff
} Spv_Memory_Access_Shift;

typedef enum Spv_Memory_Access_Mask {
    SPV_MEMORY_ACCESS_MASK_NONE = 0,
    SPV_MEMORY_ACCESS_VOLATILE_MASK = 0x00000001,
    SPV_MEMORY_ACCESS_ALIGNED_MASK = 0x00000002,
    SPV_MEMORY_ACCESS_NONTEMPORAL_MASK = 0x00000004
} Spv_Memory_Access_Mask;

typedef enum Spv_Scope {
    SPV_SCOPE_CROSS_DEVICE = 0,
    SPV_SCOPE_DEVICE = 1,
    SPV_SCOPE_WORKGROUP = 2,
    SPV_SCOPE_SUBGROUP = 3,
    SPV_SCOPE_INVOCATION = 4,
    SPV_SCOPE_MAX = 0x7fffffff
} Spv_Scope;

typedef enum Spv_Group_Operation {
    SPV_GROUP_OPERATION_REDUCE = 0,
    SPV_GROUP_OPERATION_INCLUSIVE_SCAN = 1,
    SPV_GROUP_OPERATION_EXCLUSIVE_SCAN = 2,
    SPV_GROUP_OPERATION_MAX = 0x7fffffff
} Spv_Group_Operation;

typedef enum Spv_Kernel_Enqueue_Flags {
    SPV_KERNEL_ENQUEUE_FLAGS_NO_WAIT = 0,
    SPV_KERNEL_ENQUEUE_FLAGS_WAIT_KERNEL = 1,
    SPV_KERNEL_ENQUEUE_FLAGS_WAIT_WORK_GROUP = 2,
    SPV_KERNEL_ENQUEUE_FLAGS_MAX = 0x7fffffff
} Spv_Kernel_Enqueue_Flags;

typedef enum Spv_Kernel_Profiling_Info_Shift {
    SPV_KERNEL_PROFILING_INFO_CMD_EXEC_TIME_SHIFT = 0,
    SPV_KERNEL_PROFILING_INFO_MAX = 0x7fffffff
} Spv_Kernel_Profiling_Info_Shift;

typedef enum Spv_Kernel_Profiling_Info_Mask {
    SPV_KERNEL_PROFILING_INFO_MASK_NONE = 0,
    SPV_KERNEL_PROFILING_INFO_CMD_EXEC_TIME_MASK = 0x00000001
} Spv_Kernel_Profiling_Info_Mask;

typedef enum Spv_Capability {
    SPV_CAPABILITY_MATRIX = 0,
    SPV_CAPABILITY_SHADER = 1,
    SPV_CAPABILITY_GEOMETRY = 2,
    SPV_CAPABILITY_TESSELLATION = 3,
    SPV_CAPABILITY_ADDRESSES = 4,
    SPV_CAPABILITY_LINKAGE = 5,
    SPV_CAPABILITY_KERNEL = 6,
    SPV_CAPABILITY_VECTOR16 = 7,
    SPV_CAPABILITY_FLOAT16BUFFER = 8,
    SPV_CAPABILITY_FLOAT16 = 9,
    SPV_CAPABILITY_FLOAT64 = 10,
    SPV_CAPABILITY_INT64 = 11,
    SPV_CAPABILITY_INT64ATOMICS = 12,
    SPV_CAPABILITY_IMAGE_BASIC = 13,
    SPV_CAPABILITY_IMAGE_READ_WRITE = 14,
    SPV_CAPABILITY_IMAGE_MIPMAP = 15,
    SPV_CAPABILITY_PIPES = 17,
    SPV_CAPABILITY_GROUPS = 18,
    SPV_CAPABILITY_DEVICE_ENQUEUE = 19,
    SPV_CAPABILITY_LITERAL_SAMPLER = 20,
    SPV_CAPABILITY_ATOMIC_STORAGE = 21,
    SPV_CAPABILITY_INT16 = 22,
    SPV_CAPABILITY_TESSELLATION_POINT_SIZE = 23,
    SPV_CAPABILITY_GEOMETRY_POINT_SIZE = 24,
    SPV_CAPABILITY_IMAGE_GATHER_EXTENDED = 25,
    SPV_CAPABILITY_STORAGE_IMAGE_MULTISAMPLE = 27,
    SPV_CAPABILITY_UNIFORM_BUFFER_ARRAY_DYNAMIC_INDEXING = 28,
    SPV_CAPABILITY_SAMPLED_IMAGE_ARRAY_DYNAMIC_INDEXING = 29,
    SPV_CAPABILITY_STORAGE_BUFFER_ARRAY_DYNAMIC_INDEXING = 30,
    SPV_CAPABILITY_STORAGE_IMAGE_ARRAY_DYNAMIC_INDEXING = 31,
    SPV_CAPABILITY_CLIP_DISTANCE = 32,
    SPV_CAPABILITY_CULL_DISTANCE = 33,
    SPV_CAPABILITY_IMAGE_CUBE_ARRAY = 34,
    SPV_CAPABILITY_SAMPLE_RATE_SHADING = 35,
    SPV_CAPABILITY_IMAGE_RECT = 36,
    SPV_CAPABILITY_SAMPLED_RECT = 37,
    SPV_CAPABILITY_GENERIC_POINTER = 38,
    SPV_CAPABILITY_INT8 = 39,
    SPV_CAPABILITY_INPUT_ATTACHMENT = 40,
    SPV_CAPABILITY_SPARSE_RESIDENCY = 41,
    SPV_CAPABILITY_MIN_LOD = 42,
    SPV_CAPABILITY_SAMPLED1D = 43,
    SPV_CAPABILITY_IMAGE1D = 44,
    SPV_CAPABILITY_SAMPLED_CUBE_ARRAY = 45,
    SPV_CAPABILITY_SAMPLED_BUFFER = 46,
    SPV_CAPABILITY_IMAGE_BUFFER = 47,
    SPV_CAPABILITY_IMAGE_MSARRAY = 48,
    SPV_CAPABILITY_STORAGE_IMAGE_EXTENDED_FORMATS = 49,
    SPV_CAPABILITY_IMAGE_QUERY = 50,
    SPV_CAPABILITY_DERIVATIVE_CONTROL = 51,
    SPV_CAPABILITY_INTERPOLATION_FUNCTION = 52,
    SPV_CAPABILITY_TRANSFORM_FEEDBACK = 53,
    SPV_CAPABILITY_GEOMETRY_STREAMS = 54,
    SPV_CAPABILITY_STORAGE_IMAGE_READ_WITHOUT_FORMAT = 55,
    SPV_CAPABILITY_STORAGE_IMAGE_WRITE_WITHOUT_FORMAT = 56,
    SPV_CAPABILITY_MULTI_VIEWPORT = 57,
    SPV_CAPABILITY_SUBGROUP_DISPATCH = 58,
    SPV_CAPABILITY_NAMED_BARRIER = 59,
    SPV_CAPABILITY_PIPE_STORAGE = 60,
    SPV_CAPABILITY_SUBGROUP_BALLOT_KHR = 4423,
    SPV_CAPABILITY_DRAW_PARAMETERS = 4427,
    SPV_CAPABILITY_SUBGROUP_VOTE_KHR = 4431,
    SPV_CAPABILITY_STORAGE_BUFFER16BIT_ACCESS = 4433,
    SPV_CAPABILITY_STORAGE_UNIFORM_BUFFER_BLOCK16 = 4433,
    SPV_CAPABILITY_STORAGE_UNIFORM16 = 4434,
    SPV_CAPABILITY_UNIFORM_AND_STORAGE_BUFFER16BIT_ACCESS = 4434,
    SPV_CAPABILITY_STORAGE_PUSH_CONSTANT16 = 4435,
    SPV_CAPABILITY_STORAGE_INPUT_OUTPUT16 = 4436,
    SPV_CAPABILITY_DEVICE_GROUP = 4437,
    SPV_CAPABILITY_MULTI_VIEW = 4439,
    SPV_CAPABILITY_VARIABLE_POINTERS_STORAGE_BUFFER = 4441,
    SPV_CAPABILITY_VARIABLE_POINTERS = 4442,
    SPV_CAPABILITY_ATOMIC_STORAGE_OPS = 4445,
    SPV_CAPABILITY_SAMPLE_MASK_POST_DEPTH_COVERAGE = 4447,
    SPV_CAPABILITY_IMAGE_GATHER_BIAS_LOD_AMD = 5009,
    SPV_CAPABILITY_FRAGMENT_MASK_AMD = 5010,
    SPV_CAPABILITY_STENCIL_EXPORT_EXT = 5013,
    SPV_CAPABILITY_IMAGE_READ_WRITE_LOD_AMD = 5015,
    SPV_CAPABILITY_SAMPLE_MASK_OVERRIDE_COVERAGE_NV = 5249,
    SPV_CAPABILITY_GEOMETRY_SHADER_PASSTHROUGH_NV = 5251,
    SPV_CAPABILITY_SHADER_VIEWPORT_INDEX_LAYER_EXT = 5254,
    SPV_CAPABILITY_SHADER_VIEWPORT_INDEX_LAYER_NV = 5254,
    SPV_CAPABILITY_SHADER_VIEWPORT_MASK_NV = 5255,
    SPV_CAPABILITY_SHADER_STEREO_VIEW_NV = 5259,
    SPV_CAPABILITY_PER_VIEW_ATTRIBUTES_NV = 5260,
    SPV_CAPABILITY_SUBGROUP_SHUFFLE_INTEL = 5568,
    SPV_CAPABILITY_SUBGROUP_BUFFER_BLOCK_IOINTEL = 5569,
    SPV_CAPABILITY_SUBGROUP_IMAGE_BLOCK_IOINTEL = 5570,
    SPV_CAPABILITY_MAX = 0x7fffffff
} Spv_Capability;

typedef enum Spv_Op {
    SPV_OP_NOP = 0,
    SPV_OP_UNDEF = 1,
    SPV_OP_SOURCE_CONTINUED = 2,
    SPV_OP_SOURCE = 3,
    SPV_OP_SOURCE_EXTENSION = 4,
    SPV_OP_NAME = 5,
    SPV_OP_MEMBER_NAME = 6,
    SPV_OP_STRING = 7,
    SPV_OP_LINE = 8,
    SPV_OP_EXTENSION = 10,
    SPV_OP_EXT_INST_IMPORT = 11,
    SPV_OP_EXT_INST = 12,
    SPV_OP_MEMORY_MODEL = 14,
    SPV_OP_ENTRY_POINT = 15,
    SPV_OP_EXECUTION_MODE = 16,
    SPV_OP_CAPABILITY = 17,
    SPV_OP_TYPE_VOID = 19,
    SPV_OP_TYPE_BOOL = 20,
    SPV_OP_TYPE_INT = 21,
    SPV_OP_TYPE_FLOAT = 22,
    SPV_OP_TYPE_VECTOR = 23,
    SPV_OP_TYPE_MATRIX = 24,
    SPV_OP_TYPE_IMAGE = 25,
    SPV_OP_TYPE_SAMPLER = 26,
    SPV_OP_TYPE_SAMPLED_IMAGE = 27,
    SPV_OP_TYPE_ARRAY = 28,
    SPV_OP_TYPE_RUNTIME_ARRAY = 29,
    SPV_OP_TYPE_STRUCT = 30,
    SPV_OP_TYPE_OPAQUE = 31,
    SPV_OP_TYPE_POINTER = 32,
    SPV_OP_TYPE_FUNCTION = 33,
    SPV_OP_TYPE_EVENT = 34,
    SPV_OP_TYPE_DEVICE_EVENT = 35,
    SPV_OP_TYPE_RESERVE_ID = 36,
    SPV_OP_TYPE_QUEUE = 37,
    SPV_OP_TYPE_PIPE = 38,
    SPV_OP_TYPE_FORWARD_POINTER = 39,
    SPV_OP_CONSTANT_TRUE = 41,
    SPV_OP_CONSTANT_FALSE = 42,
    SPV_OP_CONSTANT = 43,
    SPV_OP_CONSTANT_COMPOSITE = 44,
    SPV_OP_CONSTANT_SAMPLER = 45,
    SPV_OP_CONSTANT_NULL = 46,
    SPV_OP_SPEC_CONSTANT_TRUE = 48,
    SPV_OP_SPEC_CONSTANT_FALSE = 49,
    SPV_OP_SPEC_CONSTANT = 50,
    SPV_OP_SPEC_CONSTANT_COMPOSITE = 51,
    SPV_OP_SPEC_CONSTANT_OP = 52,
    SPV_OP_FUNCTION = 54,
    SPV_OP_FUNCTION_PARAMETER = 55,
    SPV_OP_FUNCTION_END = 56,
    SPV_OP_FUNCTION_CALL = 57,
    SPV_OP_VARIABLE = 59,
    SPV_OP_IMAGE_TEXEL_POINTER = 60,
    SPV_OP_LOAD = 61,
    SPV_OP_STORE = 62,
    SPV_OP_COPY_MEMORY = 63,
    SPV_OP_COPY_MEMORY_SIZED = 64,
    SPV_OP_ACCESS_CHAIN = 65,
    SPV_OP_IN_BOUNDS_ACCESS_CHAIN = 66,
    SPV_OP_PTR_ACCESS_CHAIN = 67,
    SPV_OP_ARRAY_LENGTH = 68,
    SPV_OP_GENERIC_PTR_MEM_SEMANTICS = 69,
    SPV_OP_IN_BOUNDS_PTR_ACCESS_CHAIN = 70,
    SPV_OP_DECORATE = 71,
    SPV_OP_MEMBER_DECORATE = 72,
    SPV_OP_DECORATION_GROUP = 73,
    SPV_OP_GROUP_DECORATE = 74,
    SPV_OP_GROUP_MEMBER_DECORATE = 75,
    SPV_OP_VECTOR_EXTRACT_DYNAMIC = 77,
    SPV_OP_VECTOR_INSERT_DYNAMIC = 78,
    SPV_OP_VECTOR_SHUFFLE = 79,
    SPV_OP_COMPOSITE_CONSTRUCT = 80,
    SPV_OP_COMPOSITE_EXTRACT = 81,
    SPV_OP_COMPOSITE_INSERT = 82,
    SPV_OP_COPY_OBJECT = 83,
    SPV_OP_TRANSPOSE = 84,
    SPV_OP_SAMPLED_IMAGE = 86,
    SPV_OP_IMAGE_SAMPLE_IMPLICIT_LOD = 87,
    SPV_OP_IMAGE_SAMPLE_EXPLICIT_LOD = 88,
    SPV_OP_IMAGE_SAMPLE_DREF_IMPLICIT_LOD = 89,
    SPV_OP_IMAGE_SAMPLE_DREF_EXPLICIT_LOD = 90,
    SPV_OP_IMAGE_SAMPLE_PROJ_IMPLICIT_LOD = 91,
    SPV_OP_IMAGE_SAMPLE_PROJ_EXPLICIT_LOD = 92,
    SPV_OP_IMAGE_SAMPLE_PROJ_DREF_IMPLICIT_LOD = 93,
    SPV_OP_IMAGE_SAMPLE_PROJ_DREF_EXPLICIT_LOD = 94,
    SPV_OP_IMAGE_FETCH = 95,
    SPV_OP_IMAGE_GATHER = 96,
    SPV_OP_IMAGE_DREF_GATHER = 97,
    SPV_OP_IMAGE_READ = 98,
    SPV_OP_IMAGE_WRITE = 99,
    SPV_OP_IMAGE = 100,
    SPV_OP_IMAGE_QUERY_FORMAT = 101,
    SPV_OP_IMAGE_QUERY_ORDER = 102,
    SPV_OP_IMAGE_QUERY_SIZE_LOD = 103,
    SPV_OP_IMAGE_QUERY_SIZE = 104,
    SPV_OP_IMAGE_QUERY_LOD = 105,
    SPV_OP_IMAGE_QUERY_LEVELS = 106,
    SPV_OP_IMAGE_QUERY_SAMPLES = 107,
    SPV_OP_CONVERT_FTO_U = 109,
    SPV_OP_CONVERT_FTO_S = 110,
    SPV_OP_CONVERT_STO_F = 111,
    SPV_OP_CONVERT_UTO_F = 112,
    SPV_OP_UCONVERT = 113,
    SPV_OP_SCONVERT = 114,
    SPV_OP_FCONVERT = 115,
    SPV_OP_QUANTIZE_TO_F16 = 116,
    SPV_OP_CONVERT_PTR_TO_U = 117,
    SPV_OP_SAT_CONVERT_STO_U = 118,
    SPV_OP_SAT_CONVERT_UTO_S = 119,
    SPV_OP_CONVERT_UTO_PTR = 120,
    SPV_OP_PTR_CAST_TO_GENERIC = 121,
    SPV_OP_GENERIC_CAST_TO_PTR = 122,
    SPV_OP_GENERIC_CAST_TO_PTR_EXPLICIT = 123,
    SPV_OP_BITCAST = 124,
    SPV_OP_SNEGATE = 126,
    SPV_OP_FNEGATE = 127,
    SPV_OP_IADD = 128,
    SPV_OP_FADD = 129,
    SPV_OP_ISUB = 130,
    SPV_OP_FSUB = 131,
    SPV_OP_IMUL = 132,
    SPV_OP_FMUL = 133,
    SPV_OP_UDIV = 134,
    SPV_OP_SDIV = 135,
    SPV_OP_FDIV = 136,
    SPV_OP_UMOD = 137,
    SPV_OP_SREM = 138,
    SPV_OP_SMOD = 139,
    SPV_OP_FREM = 140,
    SPV_OP_FMOD = 141,
    SPV_OP_VECTOR_TIMES_SCALAR = 142,
    SPV_OP_MATRIX_TIMES_SCALAR = 143,
    SPV_OP_VECTOR_TIMES_MATRIX = 144,
    SPV_OP_MATRIX_TIMES_VECTOR = 145,
    SPV_OP_MATRIX_TIMES_MATRIX = 146,
    SPV_OP_OUTER_PRODUCT = 147,
    SPV_OP_DOT = 148,
    SPV_OP_IADD_CARRY = 149,
    SPV_OP_ISUB_BORROW = 150,
    SPV_OP_UMUL_EXTENDED = 151,
    SPV_OP_SMUL_EXTENDED = 152,
    SPV_OP_ANY = 154,
    SPV_OP_ALL = 155,
    SPV_OP_IS_NAN = 156,
    SPV_OP_IS_INF = 157,
    SPV_OP_IS_FINITE = 158,
    SPV_OP_IS_NORMAL = 159,
    SPV_OP_SIGN_BIT_SET = 160,
    SPV_OP_LESS_OR_GREATER = 161,
    SPV_OP_ORDERED = 162,
    SPV_OP_UNORDERED = 163,
    SPV_OP_LOGICAL_EQUAL = 164,
    SPV_OP_LOGICAL_NOT_EQUAL = 165,
    SPV_OP_LOGICAL_OR = 166,
    SPV_OP_LOGICAL_AND = 167,
    SPV_OP_LOGICAL_NOT = 168,
    SPV_OP_SELECT = 169,
    SPV_OP_IEQUAL = 170,
    SPV_OP_INOT_EQUAL = 171,
    SPV_OP_UGREATER_THAN = 172,
    SPV_OP_SGREATER_THAN = 173,
    SPV_OP_UGREATER_THAN_EQUAL = 174,
    SPV_OP_SGREATER_THAN_EQUAL = 175,
    SPV_OP_ULESS_THAN = 176,
    SPV_OP_SLESS_THAN = 177,
    SPV_OP_ULESS_THAN_EQUAL = 178,
    SPV_OP_SLESS_THAN_EQUAL = 179,
    SPV_OP_FORD_EQUAL = 180,
    SPV_OP_FUNORD_EQUAL = 181,
    SPV_OP_FORD_NOT_EQUAL = 182,
    SPV_OP_FUNORD_NOT_EQUAL = 183,
    SPV_OP_FORD_LESS_THAN = 184,
    SPV_OP_FUNORD_LESS_THAN = 185,
    SPV_OP_FORD_GREATER_THAN = 186,
    SPV_OP_FUNORD_GREATER_THAN = 187,
    SPV_OP_FORD_LESS_THAN_EQUAL = 188,
    SPV_OP_FUNORD_LESS_THAN_EQUAL = 189,
    SPV_OP_FORD_GREATER_THAN_EQUAL = 190,
    SPV_OP_FUNORD_GREATER_THAN_EQUAL = 191,
    SPV_OP_SHIFT_RIGHT_LOGICAL = 194,
    SPV_OP_SHIFT_RIGHT_ARITHMETIC = 195,
    SPV_OP_SHIFT_LEFT_LOGICAL = 196,
    SPV_OP_BITWISE_OR = 197,
    SPV_OP_BITWISE_XOR = 198,
    SPV_OP_BITWISE_AND = 199,
    SPV_OP_NOT = 200,
    SPV_OP_BIT_FIELD_INSERT = 201,
    SPV_OP_BIT_FIELD_SEXTRACT = 202,
    SPV_OP_BIT_FIELD_UEXTRACT = 203,
    SPV_OP_BIT_REVERSE = 204,
    SPV_OP_BIT_COUNT = 205,
    SPV_OP_DPDX = 207,
    SPV_OP_DPDY = 208,
    SPV_OP_FWIDTH = 209,
    SPV_OP_DPDX_FINE = 210,
    SPV_OP_DPDY_FINE = 211,
    SPV_OP_FWIDTH_FINE = 212,
    SPV_OP_DPDX_COARSE = 213,
    SPV_OP_DPDY_COARSE = 214,
    SPV_OP_FWIDTH_COARSE = 215,
    SPV_OP_EMIT_VERTEX = 218,
    SPV_OP_END_PRIMITIVE = 219,
    SPV_OP_EMIT_STREAM_VERTEX = 220,
    SPV_OP_END_STREAM_PRIMITIVE = 221,
    SPV_OP_CONTROL_BARRIER = 224,
    SPV_OP_MEMORY_BARRIER = 225,
    SPV_OP_ATOMIC_LOAD = 227,
    SPV_OP_ATOMIC_STORE = 228,
    SPV_OP_ATOMIC_EXCHANGE = 229,
    SPV_OP_ATOMIC_COMPARE_EXCHANGE = 230,
    SPV_OP_ATOMIC_COMPARE_EXCHANGE_WEAK = 231,
    SPV_OP_ATOMIC_IINCREMENT = 232,
    SPV_OP_ATOMIC_IDECREMENT = 233,
    SPV_OP_ATOMIC_IADD = 234,
    SPV_OP_ATOMIC_ISUB = 235,
    SPV_OP_ATOMIC_SMIN = 236,
    SPV_OP_ATOMIC_UMIN = 237,
    SPV_OP_ATOMIC_SMAX = 238,
    SPV_OP_ATOMIC_UMAX = 239,
    SPV_OP_ATOMIC_AND = 240,
    SPV_OP_ATOMIC_OR = 241,
    SPV_OP_ATOMIC_XOR = 242,
    SPV_OP_PHI = 245,
    SPV_OP_LOOP_MERGE = 246,
    SPV_OP_SELECTION_MERGE = 247,
    SPV_OP_LABEL = 248,
    SPV_OP_BRANCH = 249,
    SPV_OP_BRANCH_CONDITIONAL = 250,
    SPV_OP_SWITCH = 251,
    SPV_OP_KILL = 252,
    SPV_OP_RETURN = 253,
    SPV_OP_RETURN_VALUE = 254,
    SPV_OP_UNREACHABLE = 255,
    SPV_OP_LIFETIME_START = 256,
    SPV_OP_LIFETIME_STOP = 257,
    SPV_OP_GROUP_ASYNC_COPY = 259,
    SPV_OP_GROUP_WAIT_EVENTS = 260,
    SPV_OP_GROUP_ALL = 261,
    SPV_OP_GROUP_ANY = 262,
    SPV_OP_GROUP_BROADCAST = 263,
    SPV_OP_GROUP_IADD = 264,
    SPV_OP_GROUP_FADD = 265,
    SPV_OP_GROUP_FMIN = 266,
    SPV_OP_GROUP_UMIN = 267,
    SPV_OP_GROUP_SMIN = 268,
    SPV_OP_GROUP_FMAX = 269,
    SPV_OP_GROUP_UMAX = 270,
    SPV_OP_GROUP_SMAX = 271,
    SPV_OP_READ_PIPE = 274,
    SPV_OP_WRITE_PIPE = 275,
    SPV_OP_RESERVED_READ_PIPE = 276,
    SPV_OP_RESERVED_WRITE_PIPE = 277,
    SPV_OP_RESERVE_READ_PIPE_PACKETS = 278,
    SPV_OP_RESERVE_WRITE_PIPE_PACKETS = 279,
    SPV_OP_COMMIT_READ_PIPE = 280,
    SPV_OP_COMMIT_WRITE_PIPE = 281,
    SPV_OP_IS_VALID_RESERVE_ID = 282,
    SPV_OP_GET_NUM_PIPE_PACKETS = 283,
    SPV_OP_GET_MAX_PIPE_PACKETS = 284,
    SPV_OP_GROUP_RESERVE_READ_PIPE_PACKETS = 285,
    SPV_OP_GROUP_RESERVE_WRITE_PIPE_PACKETS = 286,
    SPV_OP_GROUP_COMMIT_READ_PIPE = 287,
    SPV_OP_GROUP_COMMIT_WRITE_PIPE = 288,
    SPV_OP_ENQUEUE_MARKER = 291,
    SPV_OP_ENQUEUE_KERNEL = 292,
    SPV_OP_GET_KERNEL_NDRANGE_SUB_GROUP_COUNT = 293,
    SPV_OP_GET_KERNEL_NDRANGE_MAX_SUB_GROUP_SIZE = 294,
    SPV_OP_GET_KERNEL_WORK_GROUP_SIZE = 295,
    SPV_OP_GET_KERNEL_PREFERRED_WORK_GROUP_SIZE_MULTIPLE = 296,
    SPV_OP_RETAIN_EVENT = 297,
    SPV_OP_RELEASE_EVENT = 298,
    SPV_OP_CREATE_USER_EVENT = 299,
    SPV_OP_IS_VALID_EVENT = 300,
    SPV_OP_SET_USER_EVENT_STATUS = 301,
    SPV_OP_CAPTURE_EVENT_PROFILING_INFO = 302,
    SPV_OP_GET_DEFAULT_QUEUE = 303,
    SPV_OP_BUILD_NDRANGE = 304,
    SPV_OP_IMAGE_SPARSE_SAMPLE_IMPLICIT_LOD = 305,
    SPV_OP_IMAGE_SPARSE_SAMPLE_EXPLICIT_LOD = 306,
    SPV_OP_IMAGE_SPARSE_SAMPLE_DREF_IMPLICIT_LOD = 307,
    SPV_OP_IMAGE_SPARSE_SAMPLE_DREF_EXPLICIT_LOD = 308,
    SPV_OP_IMAGE_SPARSE_SAMPLE_PROJ_IMPLICIT_LOD = 309,
    SPV_OP_IMAGE_SPARSE_SAMPLE_PROJ_EXPLICIT_LOD = 310,
    SPV_OP_IMAGE_SPARSE_SAMPLE_PROJ_DREF_IMPLICIT_LOD = 311,
    SPV_OP_IMAGE_SPARSE_SAMPLE_PROJ_DREF_EXPLICIT_LOD = 312,
    SPV_OP_IMAGE_SPARSE_FETCH = 313,
    SPV_OP_IMAGE_SPARSE_GATHER = 314,
    SPV_OP_IMAGE_SPARSE_DREF_GATHER = 315,
    SPV_OP_IMAGE_SPARSE_TEXELS_RESIDENT = 316,
    SPV_OP_NO_LINE = 317,
    SPV_OP_ATOMIC_FLAG_TEST_AND_SET = 318,
    SPV_OP_ATOMIC_FLAG_CLEAR = 319,
    SPV_OP_IMAGE_SPARSE_READ = 320,
    SPV_OP_SIZE_OF = 321,
    SPV_OP_TYPE_PIPE_STORAGE = 322,
    SPV_OP_CONSTANT_PIPE_STORAGE = 323,
    SPV_OP_CREATE_PIPE_FROM_PIPE_STORAGE = 324,
    SPV_OP_GET_KERNEL_LOCAL_SIZE_FOR_SUBGROUP_COUNT = 325,
    SPV_OP_GET_KERNEL_MAX_NUM_SUBGROUPS = 326,
    SPV_OP_TYPE_NAMED_BARRIER = 327,
    SPV_OP_NAMED_BARRIER_INITIALIZE = 328,
    SPV_OP_MEMORY_NAMED_BARRIER = 329,
    SPV_OP_MODULE_PROCESSED = 330,
    SPV_OP_EXECUTION_MODE_ID = 331,
    SPV_OP_DECORATE_ID = 332,
    SPV_OP_SUBGROUP_BALLOT_KHR = 4421,
    SPV_OP_SUBGROUP_FIRST_INVOCATION_KHR = 4422,
    SPV_OP_SUBGROUP_ALL_KHR = 4428,
    SPV_OP_SUBGROUP_ANY_KHR = 4429,
    SPV_OP_SUBGROUP_ALL_EQUAL_KHR = 4430,
    SPV_OP_SUBGROUP_READ_INVOCATION_KHR = 4432,
    SPV_OP_GROUP_IADD_NON_UNIFORM_AMD = 5000,
    SPV_OP_GROUP_FADD_NON_UNIFORM_AMD = 5001,
    SPV_OP_GROUP_FMIN_NON_UNIFORM_AMD = 5002,
    SPV_OP_GROUP_UMIN_NON_UNIFORM_AMD = 5003,
    SPV_OP_GROUP_SMIN_NON_UNIFORM_AMD = 5004,
    SPV_OP_GROUP_FMAX_NON_UNIFORM_AMD = 5005,
    SPV_OP_GROUP_UMAX_NON_UNIFORM_AMD = 5006,
    SPV_OP_GROUP_SMAX_NON_UNIFORM_AMD = 5007,
    SPV_OP_FRAGMENT_MASK_FETCH_AMD = 5011,
    SPV_OP_FRAGMENT_FETCH_AMD = 5012,
    SPV_OP_SUBGROUP_SHUFFLE_INTEL = 5571,
    SPV_OP_SUBGROUP_SHUFFLE_DOWN_INTEL = 5572,
    SPV_OP_SUBGROUP_SHUFFLE_UP_INTEL = 5573,
    SPV_OP_SUBGROUP_SHUFFLE_XOR_INTEL = 5574,
    SPV_OP_SUBGROUP_BLOCK_READ_INTEL = 5575,
    SPV_OP_SUBGROUP_BLOCK_WRITE_INTEL = 5576,
    SPV_OP_SUBGROUP_IMAGE_BLOCK_READ_INTEL = 5577,
    SPV_OP_SUBGROUP_IMAGE_BLOCK_WRITE_INTEL = 5578,
    SPV_OP_DECORATE_STRING_GOOGLE = 5632,
    SPV_OP_MEMBER_DECORATE_STRING_GOOGLE = 5633,
    SPV_OP_MAX = 0x7fffffff
} Spv_Op;

#endif  // #ifndef spirv_H

